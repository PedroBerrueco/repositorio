
-- EJERCICIO A.
CREATE TABLE REGISTROS (
	CODIGO INTEGER,
    OPERACION VARCHAR(6),
    FECHA_HORA TIMESTAMP,
	COD_PRODUCTO VARCHAR(7),
    CAMPO VARCHAR(6),
    VIEJO VARCHAR(30),
    NUEVO VARCHAR(30),
    PRIMARY KEY (CODIGO)
);

-- 	EJERCICIO B
CREATE OR REPLACE TRIGGER OPERA_PRODUCTOS
AFTER DELETE OR INSERT OR UPDATE ON PRODUCTO
FOR EACH ROW
DECLARE
-- variable que almacenará el valor del último código insertado en la tabla registro.
CODE INTEGER;
BEGIN
	--Con esta lógica al principio generamos el valor que usaremos en los distintos INSERT para el código de la tabla registro.
	SELECT max(CODIGO) INTO CODE FROM REGISTROS;
	--Probando me di cuenta que si la tabla estaba vacía devolvía null, por eso este IF.
	IF CODE is null THEN
    	CODE := 0;
	END IF; 
		CODE := CODE +1;
		
    --CONDICIÓN PARA CASOS INSERT.
	IF INSERTING THEN  
        INSERT INTO REGISTROS VALUES(CODE, 'INSERT', SYSDATE, :new.COD_PRODUCTO, null, null, null );
    END IF;
	
	--CONDICIÓN PARA CASOS DELETE.
    IF DELETING THEN 
        INSERT INTO REGISTROS VALUES(CODE, 'DELETE', SYSDATE, :old.COD_PRODUCTO, null, null, null );
    END IF;
    
    --CONDICIÓN PARA CASOS UPDATE.
	IF UPDATING THEN
        -- SE GENERA UN IF POR CADA TIPO DE CAMPO QUE NOS INTERESA.
		IF :old.COD_PRODUCTO <> :new.COD_PRODUCTO THEN
            INSERT INTO REGISTROS VALUES(CODE, 'UPDATE', SYSDATE, :old.COD_PRODUCTO, 'COD_PRODUCTO', :old.COD_PRODUCTO, :new.COD_PRODUCTO );
        END IF;
  
        IF :old.NOMBRE <> :new.NOMBRE THEN
            INSERT INTO REGISTROS VALUES(CODE, 'UPDATE', SYSDATE, :old.COD_PRODUCTO, 'NOMBRE', :old.NOMBRE, :new.NOMBRE );
        END IF;
  
        IF :old.PRECIO_VENTA <> :new.PRECIO_VENTA THEN
            INSERT INTO registros VALUES(CODE, 'UPDATE', SYSDATE, :old.COD_PRODUCTO, 'PRECIO_VENTA', :old.PRECIO_VENTA, :new.PRECIO_VENTA );
        END IF;
  
        IF :old.PRECIO_PROVEEDOR <> :new.PRECIO_PROVEEDOR THEN
            INSERT INTO REGISTROS VALUES(CODE, 'UPDATE', SYSDATE, :old.COD_PRODUCTO, 'PRECIO_PROVEEDOR', :old.PRECIO_PROVEEDOR, :new.PRECIO_PROVEEDOR );
        END IF;
  
        IF :old.STOCK <> :new.STOCK THEN
            INSERT INTO REGISTROS VALUES(CODE, 'UPDATE', SYSDATE, :old.COD_PRODUCTO, 'STOCK', :old.STOCK, :new.STOCK );
        END IF;
    END IF;
END;
/

-- COMPROBACIONES.

-- DEBE CREAR UN REGISTRO.
INSERT INTO PRODUCTO VALUES('HAM-006', 'Mc Pedro', '01:00:00', '22:00:00', 3, 7, 50, 150, 'F', 'Hamburguesas', 'A12326787', 'A');

-- DEBE CREAR UN REGISTRO.
DELETE FROM PRODUCTO WHERE COD_PRODUCTO = 'HAM-006';

-- DEBE CREAR UN REGISTRO.
UPDATE PRODUCTO SET NOMBRE = 'Hamburguesa ZenZilla' WHERE COD_PRODUCTO = 'HAM-001';

-- NO DEBE CREAR UN REGISTRO.
UPDATE PRODUCTO SET CATEGORIA = 'Salsas' WHERE COD_PRODUCTO = 'HAM-001'; 

--DEBEN QUEDAR 3 REGISTROS CREADOS EN LA TABLA.    
SELECT * FROM REGISTROS;
